# tmux.conf

### general ###

# unset ctrl-b and set to crtl-c
unbind C-b
set -g prefix C-v
bind C-v send-prefix
# Secondary send-prefix for nested tmux sessions/over ssh
bind a send-prefix

set -g default-shell "$SHELL"

# vim keybinds
set -g status-keys vi
set -g mode-keys vi

# make delay timer shorter
set -sg escape-time 0

# increase history limits
set -g history-limit 99999

set -g renumber-windows on

set -g word-separators " -_@()[]#:"

set -s focus-events on

set -s extended-keys on

set -g remain-on-exit failed

### key-bindings ###

# reload config file
bind r source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"

unbind %        # default: split to l & r windows
unbind \;       # default: move to prev active pane
# unbind &      # default: kill current window
unbind l        # default: move to prev selected window (not rebound)
unbind C        # default: cutomize-mode -Z
unbind \"       # default: split vertically
unbind n        # default: next-window
unbind p        # default: previous-window
unbind M-n

bind -T prefix | splitw -h      # split horizontally (l & r)
bind -T prefix M-| splitw -h -c "#{pane_current_path}"
bind -T prefix _ splitw -v      # split vertically
bind -T prefix M-_ splitw -v -c "#{pane_current_path}"
bind -T prefix M-C new-window -c "#{pane_current_path}"
bind -T prefix % selectp -l     # select last window
bind -T prefix ? list-keys
bind -T prefix O customize-mode -Z
bind -T prefix \; command-prompt
bind -T prefix X kill-pane #P

set -g silence-action current
set -g monitor-silence 0
bind -T prefix \" {
    # toggle whether we monitor silence in a pane or not
    # -Fp: expand format options; pane-specific
    menu -T "Monitor Options" -x W -y W \
        "#{?#{==:#{monitor-silence},0},0,1} silence #{?#{==:#{monitor-silence},0},,(#{monitor-silence})}" \
        s 'set -Fp monitor-silence "#{?#{==:#{monitor-silence},0},30,0}"' \
        "#{monitor-bell} bell" b 'set -Fp monitor-bell' \
        "#{monitor-activity} activity" a 'set -Fp monitor-activity' \
        '' \
        default d 'set -p monitor-silence 0; set -p monitor-bell on; set -p monitor-activity off' \
        none n 'set -p monitor-silence 0; set -p monitor-bell off; set -p monitor-activity off'
}

bind -T prefix C-l lock

bind -r -T prefix C-PageDown next-window
bind -r -T prefix C-PageUp previous-window
bind -r -T prefix Tab next-window
bind -r -T prefix BTab previous-window

set -g base-index 1
set -g pane-base-index 1

# vim style window selection
bind -r -T prefix h selectp -L
bind -r -T prefix j selectp -D
bind -r -T prefix k selectp -U
bind -r -T prefix l selectp -R

bind -T root M-h selectp -L
bind -T root M-j selectp -D
bind -T root M-k selectp -U
bind -T root M-l selectp -R

## copy mode

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi C-q send-keys -X rectangle-toggle

# toggle status bar
bind -T prefix F1 set -g status
set -g status-position top

# change session cwd to the one in the selected pane
bind -T prefix C attach-session -c "#{pane_current_path}"

# list keybinds for each mode
bind -N "List prefix keybinds" -T prefix I list-keys -aN -T prefix
bind -N "List copy-mode-vi keybinds" -T copy-mode-vi I list-keys -aN -T copy-mode-vi
# prefix+? still lists all keybinds in all modes

# get a popup window
bind -T prefix M-p popup -EE -d "#{pane_current_path}"
bind -T prefix C-p popup -EE -d "#{session_path}"

# resize window to fit the current client
bind -T prefix R set -w window-size largest

bind -T prefix C-r respawn-pane

bind -T prefix M-m set mouse

### appearance ###

# autoname windows
set -g set-titles on

# set timeout 5 mins
set -g lock-after-time 0
if-shell "test -n $(command -v tty-clock)" {
    set -g lock-after-time 300
    set -g lock-command "tty-clock -SctB -C 7 -d 1"
    bind -T prefix J {
        if-shell "test #{lock-after-time} -eq 300" {
            set -s lock-after-time 0
            display "Locking disabled"
        } {
            set -s lock-after-time 300
            display "Locking enabled (#{lock-after-time}s)"
        }
    }
}
#set -g lock-command "cmatrix -su 2 -C white"

# sets time messages display to 2 seconds
set -g display-time 2000

## colors ##

# give full color if 256-bit or less color if 8-bit
# also, ensure focus reporting is set for focus-events and extkeys for extended keys
set -as terminal-overrides ",*:U8=0,tmux*:focus:extkeys,*-256color:RGB"

if-shell "echo $TERM|grep -Eq '(256color|kitty)'" {
    set -s default-terminal "tmux-256color"
} {
    set -s default-terminal "tmux"
}

# dynamically set tmux colors to the zsh prompt colors
set -g @fav_fg colour$_prompt_color_username
set -g @fav_cm colour$_prompt_color_hostname
set -g @fav_bg colour0

if-shell "test $USER = root" {
    set -g @fav_fg colour1
    set -g @fav_cm colour2
    set -g lock-command ""
}

# status bar conf
set -g status-left-length 40
set -g status-right-length 60
set -g status-style "bg=#{@fav_bg},fg=#{@fav_fg}"

# when the client (terminal window) is resized,
set-hook -g client-resized {
    # if the width is greater than 64
    # (note: this doesn't work with `[' or `[[' for whatever reason; it does
    # with `test' however)
    if-shell "test #{window_width} -gt 64" {
        # we have a lot of space to put the things we want
        set -g status-left '#[nobold]#{?client_prefix,#[reverse],#[noreverse]}[#S:#I.#P]\
#[noreverse]\
#{?#{==:#(whoami),root},, #(whoami)} #h #{?pane_mode,#{s/-mode//:#{pane_mode}} ,}\
#{?#{||:#{==:#{pane_mode},view-mode},#{==:#{pane_mode},copy-mode}},\
#{?rectangle_toggle,#[reverse],#[noreverse]}\
#{?selection_active,#(echo $((#{selection_end_x} > #{selection_start_x} ? \
#{selection_end_x}-#{selection_start_x}+1 : #{selection_start_x}-#{selection_end_x}+1))\
x\
$((#{selection_end_y} > #{selection_start_y} ? \
#{selection_end_y}-#{selection_start_y}+1 : #{selection_start_y}-#{selection_end_y}+1))\
)#[noreverse] ,},}#[noreverse]#{?#{mouse},~,|} '
        set -g status-right '#[nobold] | \
#{?#{==:#{session_path},#(echo $HOME)},~,#{b:session_path}} | \
#(date +%a\ %b\ %d\ %I:%M\ %P)\
#{?#(test -f /opt/vc/bin/vcgencmd), | #(. <(cut -c3- ~/.tmux.conf); _temperature),}\
#{?#{||:#(command -v upower),#(command -v termux-battery-status)},\
 | #(bash $_confdir/extras.sh _battery_info),}'
    } {
        # otherwise, get a smaller set of info (this might be updated in the future)
        set -g status-left '#[nobold]#{?client_prefix,#[reverse],#[noreverse]}\
[#S:#I.#P#{?#{mouse},>,]}#[noreverse] '
        set -g status-right '#[nobold] | \
#{?#{==:#{session_path},#(echo $HOME)},~,#{b:session_path}} | #(date +%R)\
#{?#(test -f /opt/vc/bin/vcgencmd), | #(. <(cut -c3- ~/.tmux.conf); _temperature),}\
#{?#{||:#(command -v upower),#(command -v termux-battery-status)},\
 | #(bash $_confdir/extras.sh _battery_info),}'
    }
}

set-window-option -g window-status-current-style "fg=#{@fav_bg},bg=#{@fav_fg},nobold"

# pane number display
set -Fg display-panes-active-colour "#{@fav_cm}"
set -Fg display-panes-colour "#{@fav_fg}"

# clock mode
set -Fg clock-mode-colour "#{@fav_fg}"
#set -g clock-mode-style 12

# pane border
if-shell "echo $TERM|grep -q 256color" {
    set -g pane-border-style fg=colour240
} {
    set -g pane-border-style fg=colour7
}
set -g pane-active-border-style "fg=#{@fav_fg}"
set -g pane-border-lines double
set -g pane-border-status bottom
set -g pane-border-format " #P [#{pane_width}x#{pane_height}] #{pane_current_command} (#{?#{==:#{pane_current_path},#(echo $HOME)},~,#{b:pane_current_path}}) " 

# version-specific (>3.3)
if-shell "test $(tmux -V | sed 's/[^0-9]//g') -ge 33" {
    # these options were added in v3.3
    # popup
    set -g popup-border-lines rounded
    set -g popup-border-style "fg=#{@fav_fg}"
    set -g pane-border-indicators off
}

# message text
# colors are deliberately backwards here
set -g message-style "fg=#{@fav_bg},bg=#{@fav_fg}"
# the command prompt style when in command mode
set -g message-command-style "fg=#{@fav_fg},bg=#{@fav_bg}"

# mode style (colors in copy mode, etc.)
set-window-option -g mode-style "fg=#{@fav_bg},bg=#{@fav_fg}"

source-file -q ~/.tmux-extras # source any system-specific settings if any
