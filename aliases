# Aliases

# Set the command to use for which
if [ "$(which whence)" = "whence: shell built-in command" ]; then
    # we're using zsh
    whichcmd="whence"
else
    # otherwise, assuming we're using bash
    whichcmd="which"
fi

# Navigating directories
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias ..3='cd ../../..'
alias ..4='cd ../../../..'
alias ..5='cd ../../../../..'
alias ..6='cd ../../../../../..'
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias grip='grep -i'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias lgr='ls | grep'
alias llgr='ls -l | grep'
alias findinfile='grep -iRl 2>/dev/null'
alias la='ls -a'
alias lah='ls -lah'
alias lh='ls -lh'
alias l='ls'
alias ll='ls -la'
alias lf='ls -F'
alias laf='ls -aF'
alias llf='ls -laF'
mkcdir () { mkdir -p "$1" && cd "$1"; }

# Git aliases
if [ ! -z $($whichcmd git) ]; then
    alias ga='git add'
    alias gcm='git commit'
    alias gpull='git pull'
    alias gpush='git push'
    alias gbr='git branch'
    alias gco='git checkout'
    alias gl='git log'
fi

# WINE aliases
if [ ! -z $($whichcmd wine) ]; then
    alias cdcdir='cd ~/.wine/drive_c/'
    alias wine64='WINEPREFIX=$HOME/.wine64 wine64'
fi

# xclip
if [ ! -z $($whichcmd xclip) ]; then
    alias copyimg='copyimg () { xclip -selection clipboard -t image/png -i < $1; }; copyimg'
fi

# Package manager
# ins, srx, shw, and rem aliases should use the default package manager
# for any distro
if [ ! -z $($whichcmd apt) ]; then
    # if apt is installed
    alias agi='sudo apt install -y'
    alias acs='apt search'
    acss () { apt search "$1" | grep --color=none "$1" ; } # s = strict
    alias acshow='apt show'
    alias agr='sudo apt remove'
    alias update='sudo /bin/bash -c "echo \"--- update\" ; apt update && echo \"--- upgrade\" ; apt upgrade -y && echo \"--- autoremove\" ; apt autoremove -y"'

    alias ins='agi'
    alias srx='acs'
    alias shw='acshow'
    alias rem='agr'
fi

if [ ! -z $($whichcmd pkg) ]; then
    # if pkg is installed
    alias pki='pkg install'
    alias pks='pkg search'
    alias pkshow='pkg show'
    alias pkr='pkg remove'
    alias update='pkg upgrade'

    alias ins='pki'
    alias srx='pks'
    alias shw='pkshow'
    alias rem='pkr'
fi

if [ ! -z $($whichcmd pacman) ]; then
    # if pacman is installed
    alias paci='sudo pacman -Syu'
    alias pacs='pacman -Ss'
    alias pacshow='pacman -Si'
    alias pacr='sudo pacman -R'
    alias update='sudo pacman -Syyu'

    alias ins='paci'
    alias srx='pacs'
    alias shw='pacshow'
    alias rem='pacr'
fi

if [ ! -z $($whichcmd yay) ]; then
    # if yay is installed
    alias yayi='yay -Syu'
    alias yays='yay -Ss'
    alias yayshow='yay -Si'
    alias yayr='yay -R'
    # Should overwrite the `update' alias from pacman if installed
    alias update='yay -Syyu'

    alias ins='yayi'
    alias srx='yays'
    alias shw='yayshow'
    alias rem='yayr'
fi

if [ ! -z $($whichcmd emerge) ]; then
    # USE can be changed after a command, with the specified package going after
    alias emi='emerge --ask'
    alias emr='emerge --deselect' # will be later removed with --depclean
    alias emsrx='emerge --search'

    alias update='emerge --update --deep @world'

    alias ins='emi'
    alias srx='emsrx'
    #alias shw=''
    alias rem='emr'
fi

# Administration
alias _='sudo'
alias _i='sudo -i'
alias _s='sudo -s'
alias chkdu='df -h 2>/dev/null | head -n 1 && df -h 2>/dev/null | grep data-root --color=none'
alias dd='dd status=progress'
alias rm='rm -i'
sshpassthru () {
    # $1: port on host you want access to; $2: port to put it on; $3: <user>@<host>
    if test $# -ne 3; then
        echo "args: <from host port> <to local port> <host>"
    else
        ssh -NL $2:localhost:$1 $3
    fi
}

## usbguard
if [ ! -z $($whichcmd usbguard) ]; then
    alias usballow='sudo usbguard allow-device'
    alias usbblock='sudo usbguard block-device'
    alias usbreject='sudo usbguard reject-device'
    alias usblist='sudo usbguard list-devices'
    alias usbwatch='sudo usbguard watch'
fi

# KDE Plasma
if [ ! -z $($whichcmd plasmashell) ]; then
    alias restartplasma='sh -c "kquitapp5 plasmashell && plasmashell >/dev/null &"'
fi

# Less Configuration
LESS="-f -g -i -J -M -R -S -w -x4"; export LESS

# Python
if [ ! -z $($whichcmd python3) ]; then
    alias py='python3'
    alias py3='python3'
    alias mkvenv='python3 -m venv venv'
    alias govenv='. venv/bin/activate'
    alias byevenv='deactivate'
    alias serve='hostname -I 2>/dev/null ; python3 -m http.server'
fi

# Misc
alias tma='tmux attach'
alias calc='calc () { bc -l <<< "$1"; }; calc'
alias getdevs="ls /dev/sd?*"

if [ ! -z $($whichcmd qemu-system-x86_64) ]; then
    alias qemu='qemu-system-x86_64'
    alias qmu='qemu-system-x86_64'
fi

if [ ! -z $($whichcmd syncthing) ]; then
    alias rmsyncconflicts='find ~ -name "*sync-conflict*" -exec rm -i {} \;'
    alias findsyncconflicts='find ~ -name "*sync-conflict*"'
fi

## Aliases for reverse engineering/pentesting/etc. ##

# radare2
if [ ! -z $($whichcmd r2) ]; then
    alias r2d='r2 -A -d'
    alias r2wd='r2 -A -d -w'
    alias r2empty='r2 malloc://512'
fi

# javap (reversing compiled .class files)
if [ ! -z $($whichcmd javap) ]; then
    alias javadec='javap -v -p -c'
fi

# Look at the hex or binary representations of files
hex () { xxd "$1" | view -; }
bin () { xxd -b -c 8 "$1" | view -; }

alias listen='nc -nvlp $1'
